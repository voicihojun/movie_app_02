{"version":3,"sources":["Nominations.js","ResultFor.js","SearchBar.js","App.js","index.js"],"names":["Nominations","nominees","setNominees","removeNomination","e","target","parentElement","firstChild","innerText","console","log","filter","nominee","id","map","className","onClick","ResultFor","api","movies","useState","onNomination","Duplicate","a","i","length","imdbID","API","axios","get","info","data","year","Year","title","Title","movie","SearchBar","text","isLoading","inputs","setInputs","API_KEY","fetchMovies","Search","undefined","style","width","onChange","value","placeholder","nomi","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b5f886e.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Nominations({ nominees, setNominees }) {\n  const removeNomination = (e) => {\n    const target = e.target.parentElement.firstChild.innerText;\n    console.log(target);\n    setNominees(nominees.filter((nominee) => nominee.id !== target));\n    // setNominees([...nominees, nominee]);\n    // setNominees(nominees.concat(nominee));\n  };\n\n  return (\n    <div id=\"nominations\">\n      <ul>\n        {nominees.map((nominee) => (\n          <li>\n            <span className=\"hidden\">{nominee[\"id\"]}</span>\n            {nominee[\"title\"]} ({nominee[\"year\"]})\n            <button onClick={removeNomination}>Remove</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Nominations;\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport Nominations from \"./Nominations\";\n\nfunction ResultFor({ api, movies }) {\n  const [nominees, setNominees] = useState([]);\n\n  const onNomination = async (e) => {\n    const imdbID = e.target.parentElement.firstChild.innerText;\n    const API = `${api}&i=${imdbID}`;\n    const info = await axios.get(API);\n\n    const id = info.data.imdbID;\n    const year = info.data.Year;\n    const title = info.data.Title;\n\n    const nominee = {\n      id: id,\n      year: year,\n      title: title,\n    };\n    // console.log(nominees.filter((id) => id));\n    // console.log(nominee.id);\n\n    function Duplicate(nominees) {\n      for (let i = 0; i < nominees.length; i++) {\n        if (nominees[i][\"id\"] === nominee[\"id\"]) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    if (nominees.length < 5) {\n      if (Duplicate(nominees)) {\n        console.log(Duplicate(nominees));\n        console.log(\"duplicate!!\");\n      } else {\n        setNominees([...nominees, nominee]);\n        // setNominees(nominees.concat(nominee));\n        console.log(nominees);\n      }\n    } else {\n      console.log(\"BANNER!!\");\n      console.log(nominees);\n    }\n  };\n\n  return (\n    <div id=\"container\">\n      <div id=\"resultFor\">\n        <ul>\n          {movies.map((movie) => (\n            <li key={movie.imdbID}>\n              <span className=\"hidden\">{movie.imdbID}</span>\n              {movie.Title} ({movie.Year})\n              <button onClick={onNomination}>Nominate</button>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <Nominations nominees={nominees} setNominees={setNominees} />\n    </div>\n  );\n}\n\nexport default ResultFor;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport ResultFor from \"./ResultFor\";\nimport \"./App.css\";\n// import { getByTitle } from \"@testing-library/react\";\n\n// TODO:\n// when I fail to search movie getByTitle, handle ERROR!\n\nfunction SearchBar() {\n  const [inputs, setInputs] = useState({\n    text: \"\",\n    movies: [],\n    isLoading: true,\n    nominees: [],\n  });\n\n  const { text, movies, isLoading, nominees } = inputs;\n\n  const onChange = (e) => {\n    setInputs({\n      ...inputs,\n      text: e.target.value,\n    });\n  };\n\n  const API_KEY = \"http://www.omdbapi.com/?apikey=9cbee72\";\n\n  const fetchMovies = async () => {\n    const {\n      data: { Search },\n    } = await axios.get(`${API_KEY}&&s=${text}`);\n\n    // 검색어를 통해서 불러오는데 시간이 걸려서 movies가 처음에 빈\n    // 배열로 나오는게 문제점.\n    console.log(\"=========\");\n    console.log(Search);\n    console.log(\"=========\");\n    if (Search === undefined) {\n      console.log(\"ERROR undefined\");\n    } else {\n      setInputs({\n        ...inputs,\n        movies: Search,\n        isLoading: false,\n      });\n      console.log(movies);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Movie_app_02</h1>\n      <div>\n        <h3>Movie title</h3>\n        <input\n          style={{ width: \"300px\" }}\n          onChange={onChange}\n          value={text}\n          placeholder=\"Enter a title to search\"\n        />\n        <button onClick={fetchMovies}>submit</button>\n      </div>\n\n      <ResultFor api={API_KEY} movies={movies} />\n\n      <div id=\"nomination\">\n        <ul>\n          {nominees.map((nomi) => (\n            <li>\n              nomi\n              <button>Remove</button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchBar;\n","import SearchBar from \"./SearchBar\";\n\nfunction App() {\n  return (\n    <div>\n      <SearchBar />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}